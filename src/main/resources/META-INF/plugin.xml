<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <idea-version since-build="241"/>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.ljh.request.request-man</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>RequestMan</name>
    <version>1.0.1</version>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor url="https://github.com/komorebiCarry/request-man">komorebiCarry</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
<b>RequestMan</b> - A powerful API testing and documentation generation tool integrated into IntelliJ IDEA. 
Supports both automatic API scanning and custom API management with multilingual support (English/Chinese).<br>
<br>
<b>RequestMan</b> - 一款集成于 IntelliJ IDEA 的接口调试与文档生成工具，支持"接口扫描模式"与"自定义接口模式"自由切换，助力高效开发与接口管理。<br>
<br>
<b>Key Features / 核心功能：</b>
<ul>
  <li><b>Smart API Scanning / 智能接口扫描：</b> Automatically scan Spring APIs (@RestController, @RequestMapping), generate API lists and parameter structures with documentation preview / 一键扫描项目中的 Spring 接口，自动生成接口列表、参数结构，支持文档预览与 JSON 示例生成</li>
  <li><b>Custom API Management / 自定义接口管理：</b> Manually add, edit, and save custom APIs with support for various request body types, authentication, and post-operations / 手动添加、编辑、保存自定义 API，支持多种请求体类型、认证、后置操作等高级功能</li>
  <li><b>Environment & Variable Management / 环境与变量管理：</b> Support multi-environment configuration and global variable management with <code>{{variable}}</code> syntax / 支持多环境配置，全局变量管理，使用 <code>{{变量名}}</code> 动态引用</li>
  <li><b>Quick Search & Location / 高效搜索定位：</b> Use <b>Ctrl+Alt+/</b> for instant API search by URL, method name, or third-party packages / 快捷键 <b>Ctrl+Alt+/</b> 一键搜索，支持按 URL、方法名、三方包等多维度检索</li>
  <li><b>Panel Quick Access / 面板快速访问：</b> Use <b>Ctrl+Alt+Shift+Z</b> to quickly show/hide the RequestMan tool window / 快捷键 <b>Ctrl+Alt+Shift+Z</b> 快速显示/隐藏 RequestMan 工具窗口</li>
  <li><b>Response Processing / 响应处理与文档：</b> Response folding, JSON formatting, documentation preview, and built-in JSONPath extractor / 响应折叠、JSON 格式化、文档预览、内置 JSONPath 提取器</li>
  <li><b>Import/Export / 接口导入导出：</b> Support API collection import/export using standard JSON format / 支持接口集合的导入导出，使用标准 JSON 格式进行数据交换</li>
  <li><b>Multilingual Support / 多语言支持：</b> Full internationalization support for English and Chinese interfaces / 完整的英文和中文界面本地化支持</li>
  <li><b>Performance Optimization / 性能优化：</b> Configurable scanning timeout, caching, and performance monitoring / 可配置的扫描超时、缓存和性能监控</li>
  <li><b>Path Parameter Updates / Path 参数动态更新：</b> Dynamic URL updates when path parameters change / 支持 Path 参数变化时自动更新 URL 功能</li>
  <li><b>Auto-save Control / 自动保存控制：</b> User-configurable auto-save functionality / 用户可选择是否启用自动保存</li>
  <li><b>JSON Structure Panel / JSON结构体参数面板：</b> Support for recursive structures and complex nested parameters / 支持递归结构，可处理复杂的嵌套JSON参数</li>
</ul>
<br>
<b>Quick Start / 快速开始：</b>
<ol>
  <li><b>Settings / 插件设置：</b> Go to <b>Settings > RequestMan Settings</b> to configure environments and global variables / 在 IDEA 设置中选择 <b>RequestMan Settings</b>，配置环境管理和全局变量</li>
  <li><b>API Scanning / 接口扫描：</b> Open the tool window, click "Refresh APIs" to automatically scan Spring APIs / 打开工具窗口，点击"刷新接口"自动扫描 Spring 接口，选择接口进行调试</li>
  <li><b>Custom APIs / 自定义接口：</b> Switch mode and click "Add API" to create custom APIs with various body types / 切换模式，点击"新增接口"创建自定义 API，支持多种 Body 类型和后置操作</li>
  <li><b>API Search / 接口搜索：</b> Press <b>Ctrl+Alt+/</b> for quick API search and navigation / 按 <b>Ctrl+Alt+/</b> 快速搜索和定位接口</li>
  <li><b>Variable Usage / 变量引用：</b> Use <code>{{variable}}</code> syntax in parameters to reference global variables / 在参数中使用 <code>{{变量名}}</code> 动态引用全局变量</li>
</ol>
<br>
<em>Version: 1.0.1 - Enhanced with Internationalization & UI Improvements / 版本: 1.0.1 - 增强国际化与界面优化</em>
    ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.java</depends>
    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="RequestMan"
                    factoryClass="com.ljh.request.requestman.ui.RequestManToolWindowFactory"
                    anchor="right"
                    icon="/META-INF/pluginIconRight.svg"/>
        <applicationConfigurable instance="com.ljh.request.requestman.ui.RequestManSettingsConfigurable"
            displayName="RequestMan Settings"/>
        <notificationGroup
            id="RequestMan"
            displayType="BALLOON"
            isLogByDefault="false"/>
        <postStartupActivity implementation="com.ljh.request.requestman.startup.RequestManStartupActivity"/>

    </extensions>
    <actions>
        <action id="com.ljh.request.requestman.ShowApiSearchAction"
                class="com.ljh.request.requestman.action.ShowApiSearchAction"
                text="Api Search"
                description="Pop-up api search window">
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt SLASH"/>
        </action>
        <action id="com.ljh.request.requestman.ShowRequestManPanel"
                class="com.ljh.request.requestman.action.ShowRequestManPanelAction"
                text="Show RequestMan Panel"
                description="Show or hide RequestMan tool window">
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift Z"/>
        </action>
    </actions>
</idea-plugin>